# build definition for function app

resources:
- repo: self
  clean: true
trigger:
  batch: true
  branches:
    include:
    - master
schedules:
- cron: "0 17 * * Fri"
  always: true
  displayName: Weekly build
  branches:
    include:
    - master

stages:
- stage: build
  jobs:
  - job: build
    pool:
      vmImage: 'windows-latest'
    variables:
      BuildConfiguration: 'release'
    steps:
    - checkout: self

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        useGlobalJson: true

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration) --no-cache'
    
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: false
        projects: '**/EmailRelay.csproj'
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: false

    - task: PublishPipelineArtifact@0
      displayName: 'Publish build Artifact'
      inputs:
        targetPath: '$(build.artifactstagingdirectory)'
        artifactName: function

    - task: PublishPipelineArtifact@0
      inputs:
        targetPath: deploy
        artifactName: deploy

- stage: release
  jobs:
  - job: infra
    pool:
      vmImage: 'windows-latest'
    variables:
    - group: 'Deployment Credentials'
    - name: ResourceGroupName
      value: 'email-relay'

    steps:
    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: deploy
        targetPath: '$(System.ArtifactsDirectory)'

    - task: AzurePowerShell@4
      displayName: 'Deploy infrastructure'
      inputs:
        azureSubscription: 'Opensource Deployments'
        ScriptPath: '$(System.ArtifactsDirectory)/Deploy.ps1'
        ScriptArguments: '-ResourceGroupName $(ResourceGroupName)'
        azurePowerShellVersion: LatestVersion

  - job: deploy
    dependsOn: infra
    pool:
      vmImage: 'windows-latest'
    variables:
    - group: 'Deployment Credentials'
    - group: 'Sendgrid'
    - name: ResourceGroupName
      value: 'email-relay'

    steps:
    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: function
        targetPath: '$(System.ArtifactsDirectory)'

    - task: AzureFunctionApp@1
      displayName: 'Deploy Azure Function App'
      inputs:
        azureSubscription: 'Opensource Deployments'
        appType: functionApp
        appName: '$(ResourceGroupName)'
        # settings injected via keyvault and/or Azure DevOps secret variables
        appSettings: "-ArchiveContainerName emails -RelayTargetEmail $(RelayTargetEmail) -SendgridApiKey $(SendgridApiKey) -Domain $(Domain) -Prefix $(Prefix) -SendAsDomain $(SendAsDomain)"
        package: '$(System.ArtifactsDirectory)/EmailRelay'
        deploymentMethod: runFromPackage
